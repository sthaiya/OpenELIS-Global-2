name: Build OpenELIS-Global-2 Installer
on:
  # release:
  #   types: [published] 
  workflow_run:
    workflows: ["OpenELIS Frontend QA framework workflow"]  
    types:
      - completed
    
jobs:
  run-condition :
     if: ${{ github.repository == 'DIGI-UW/OpenELIS-Global-2' && github.event.workflow_run.conclusion == 'success' && github.event_name == 'release' && github.event.action == 'published' }}
     runs-on: ubuntu-latest
     steps:
      - run: echo "ðŸ“¦ Building Intaller"

  build-installer-and-upload-installer:
    needs: [run-condition]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout OpenELIS-Global2
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}
          submodules: recursive

      - name: Build installer
        run: ./build.sh -ib develop

      - name: check installer
        run: ls OEInstaller/linux  


      - name: Find installer file
        id: find_file
        run: |
          # Find the file in OEInstaller/linux with .tar.gz extension
          FILE_PATH=$(find OEInstaller/linux -name "*.tar.gz" -print -quit)
          if [ -z "$FILE_PATH" ]; then
            echo "No .tar.gz file found in OEInstaller/linux directory."
            exit 1
          fi
          echo "File path: $FILE_PATH"
          # Extract the file name from the path
          FILE_NAME=$(basename "$FILE_PATH")
          echo "File name: $FILE_NAME"
          # Pass the file path and name to outputs
          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ env.FILE_NAME }}
          asset_content_type: application/gzip  
 
